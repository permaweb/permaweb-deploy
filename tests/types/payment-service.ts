/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/balance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Current Balance of winc */
        get: {
            parameters: {
                query?: {
                    address?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BalanceResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/price/bytes/{byteCount}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Amount of Credits in winc for Byte Count */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    byteCount: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/price/{type}/{amount}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get winc for Payment Type and Amount */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    type: "ario" | "solana" | "base-eth" | "arweave" | "ethereum";
                    amount: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentCreditResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/account/balance/{token}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Post a pending payment transaction */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    token: "arweave" | "ario" | "solana" | "base-eth";
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        tx_id?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                            creditedTransaction?: components["schemas"]["CreditedPaymentTx"];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * @description A big number string representing an amount of credits in winc.
         * @example 332824926
         */
        Winc: string;
        BalanceResponse: {
            /** @description Total winc if all approvals are revoked */
            controlledWinc?: string;
            /** @description Total winc user can spend */
            winc?: string;
            /** @description Total winc including shared credits */
            effectiveBalance?: string;
        };
        CreditResponse: {
            winc?: components["schemas"]["Winc"];
            adjustments?: Record<string, never>[];
        };
        PaymentCreditResponse: {
            winc?: components["schemas"]["Winc"];
            adjustments?: Record<string, never>[];
            fees?: Record<string, never>[];
            actualPaymentAmount?: number;
            quotedPaymentAmount?: number;
        };
        CreditedPaymentTx: {
            transactionId?: string;
            transactionQuantity?: number;
            winstonCreditAmount?: string;
            winc?: string;
            status?: string;
            id?: string;
            quantity?: string;
            owner?: string;
            target?: string;
            block?: number;
            confirmedBlocks?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
